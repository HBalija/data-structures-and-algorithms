MULTIPLE POINTERS

- usable on sorted arrays / lists

Creating POINTERS or values that correspond to an index or position and move towards the beggining,
end or middle based on a certain condition.

Very efficient for solving problems with minimal space and time complexity.


EXAMPLE:

Write a function called sumZero which accepts a sorted array of integers. The function should find
the first pair where the sum is 0. Return an array that includes both values that sum.
to zero or undefined if a pair does not exist.


pseudocode:
- IMPORTANT: we have a sorted array

- we start from the first and the last index which we store into variables
- inside a loop we sum values on that indexes
- if sum is greater than 1, that means that value on the right is bigger than value on the left
- so we move right index to the left for one
- if sum is less than 0, that means that value on the left is too small
- so we move left index for one place right
- eventually we will come to the sum of zero if it exists and return it



sumZero([-3, -2, -1, 0, 1, 2, 3]) // [-3, 3]
sumZero([-2, 0, 1, 3]) // undefined
sumZero([1, 2, 3]) // undefined
