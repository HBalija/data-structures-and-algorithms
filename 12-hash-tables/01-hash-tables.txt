HASH TABLES

- hash tables are used to store key - value pairs
- keys are not ordered

- unlike arrays, hash tables are fast for these operations:
  finding values, adding new values, removing values


IMPLEMENTATION of associative array:

To implement a hash table, we'll be using an array.

In order to look up values by key, we need a way to convert keys into valid array indices.
A function that performs this task is called a hash function.


HASH FUNCTION

Function that takes data of arbitrary size, and it is going to return data
of fixed size. It is going to map input to an output of a fixed size.

--> len of hash return is always the same!


What makes a good hash function:
- not a cryptographically secure one

1. Fast (i.e. constant time)
2. Doesn't cluster outputs at specific indices, but distributes uniformly
3. Deterministic (same input returns same output)

--> hash functions take advantage of prime numbers
--> it is also helpfull if array for storing data has a prime length



Big O of hash tables (average case)

Insert: O(1)
Deletion: O(1)
Access: O(1)

with bad hash functions - these can be O(n)time



COLLISION HANDLING:

1) Separate Chaining
  - at each index in our array we can store multiple values by using a more
    sophisticated data structure (example array or linked list)
    - we get nested data structure - see image

    from image:
    - so we look for "salmon", we get 4, we go to arrays index 4 and we loop
      through to get "salmon" value out

2) Linear Probing
  - when we find a collision, we search through array to find the next empty
    slot
  - so we store 1 element to each array position



PSEUDOCODE:


SET

- function accepts key and value
- hashes the key
- stores the key-value pair in the hash table array via separate chaining



GET

- accepts a key
- hashes the key
- retrieve the value via separate chaining (by looping through array stored at that index)
- if the key isn't found, return undefined


KEYS

- loops through the hash table array and returns an array of keys



VALUES

- loops through the hash table array and returns an array of values in the table
